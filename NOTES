Application that shows restaurants recommended by chefs in various cities. Chefs (users) can log in and submit restaurants they recommend in their own city.

Models:
CITY
*Associations:
- has_many :chefs
- has_many :restaurants, through: chefs
*Attributes:
- :name

CHEF (aka User)
*Associations:
- belongs_to :city
- has_many :chefrestaurant
- has many :restaurants, through :chefrestaurant
*Attributes:
- :name
- :email
- :password
- :city
- :job[title]
- :job[restaurant]

RESTAURANT:
*Associations:
- has_many :chefrestaurant
- has_many :chefs, through: :chefrestaurant
- belongs_to :city
*Attributes:
- name
- cuisine

CHEFRESTAURANT (join table):
*Associations:
- belongs_to :chef
- belongs_to :restaurant


 
Restful Routes:

MAIN:
GET ‘/’ => root page; welcomes user, asks if they want to sign up or log in


CITY:
Brief notes:
-	We want a list of cities to be viewable (via /cities) and have logged-in users view the recommended restaurants in each city.
-	The ID will be a slug in the URL.
-	**For this app, the only way a new city can be added is via the chef sign-up form.  There will be no separate erb view for a new city form.
-	**Cities cannot be edited or deleted by anyone.

GET ‘/cities’ => shows all cities

GET ‘/cities/new’ => display create new city form (POSSIBLY DON’T NEED, HAVE NEW CITY ADDED IN CHEF SIGN UP FORM)

POST ‘/cities’ => create new city

GET ‘/cities/:id’ => HAVE ID BE CITY SLUG; display one city and its chefs and recommended restaurants

GET ‘/cities/:id/edit’ => show form edit a city (POSSIBLY DON’T NEED)

PATCH ‘/cities/:id’ => edit a city (AGAIN, POSSIBLY DON’T NEED)

DELETE ‘/cities/:id/delete’ => delete a city (LIKELY DON’T NEED THIS FUNCTION)


CHEF:
Brief notes:
-	A chef can sign up and log in. Upon sign up, they will identify which city they belong to.
-	A chef can add recommended restaurants to their city (and only their city).
-	**A chef can edit his occupation info, but cannot delete himself.

GET ‘/signup’ => show sign up form

GET ‘/login’ => show login screen

POST ‘/chefs’ => show list of all chefs, with city next to their name and occupation info

GET ‘/chefs/:id => display a specific chef and their recommended restaurants; make :id a slug of the chef’s name

GET ‘/chefs/:id/edit’ => display edit form for chef’s profile (only let the chef edit their own occupation)

PATCH ‘/chefs/:id’ => updates the chef’s profile

DELETE ‘/chefs/:id/delete’ => deletes a specific chef. (NOT NEEDED)


RESTAURANT:
Brief notes:
-	Restaurants can be added by a chef
-	Restaurants can be edited by a chef (only edit recommendation notes)
-	Restaurants can be deleted by a chef if they no longer want to recommend it

GET ‘/restaurants’ => shows all recommended restaurants by city

GET ‘/restaurants/new’ => show form to add new recommended restaurant

POST ‘/restaurants’ => create new recommended restaurant

GET ‘/restaurants/:id’ => HAVE ID BE RESTAURANT SLUG; display a restaurant, its cuisine, and who recommended it

GET ‘/restaurants/:id/edit’ => show edit form; let the chef edit the restaurant (only by adding/editing a note, recommended dish)

PATCH ‘/restaurants/:id’ => show newly updated restaurant

DELETE ‘/restaurants/:id/delete’ => let a chef delete a restaurant he had recommended
